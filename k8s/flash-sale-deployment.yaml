# âš¡ FLASH SALE KUBERNETES DEPLOYMENT
# Auto-scaling configuration for high-traffic flash sales

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flash-sale-api
  labels:
    app: flash-sale
spec:
  replicas: 3 # Start with 3 pods
  selector:
    matchLabels:
      app: flash-sale
  template:
    metadata:
      labels:
        app: flash-sale
    spec:
      containers:
      - name: api
        image: yourregistry/flash-sale-api:latest
        ports:
        - containerPort: 3001
        env:
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: flash-sale-secrets
              key: redis-url
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: flash-sale-secrets
              key: database-url
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Horizontal Pod Autoscaler - Scales based on CPU/traffic
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flash-sale-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flash-sale-api
  minReplicas: 3
  maxReplicas: 100 # Scale up to 100 pods during flash sale!
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 0 # Scale up immediately!
      policies:
      - type: Percent
        value: 100 # Double pods every time
        periodSeconds: 15
      - type: Pods
        value: 10 # Or add 10 pods
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300 # Wait 5 min before scaling down
      policies:
      - type: Percent
        value: 50 # Halve pods
        periodSeconds: 60

---
# Redis for rate limiting and caching
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: flash-sale-service
spec:
  selector:
    app: flash-sale
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001
  type: LoadBalancer

