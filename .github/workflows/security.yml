name: Security Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 1-5'

jobs:
  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci --ignore-scripts

      - name: Lint
        run: npm run -s lint || true

      - name: Run unit tests
        run: npm test --silent || true

      - name: npm audit (production)
        run: npm audit --audit-level=high --omit=dev || true

      - name: Semgrep SAST
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/ci
            p/javascript
            p/nodejs
          generateSarif: true
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      - name: Gitleaks (secrets scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --no-git -v --redact --report-format sarif --report-path gitleaks.sarif

      - name: Build project
        run: npm run -s build || true

      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Dependency scan (Grype)
        uses: anchore/scan-action@v4
        with:
          sbom: sbom.spdx.json
          fail-build: false

      - name: OWASP ZAP Baseline scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: ${{ secrets.TARGET_URL || 'http://localhost:5000' }}
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -m 5'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker_scan:
    if: false # enable when docker build is available
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        run: docker build -t app:ci . || true
      - name: Trivy image scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: app:ci
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'

