openapi: 3.0.0
info:
  title: AI Platform API
  description: Full-featured AI platform with real-time features and crypto payments
  version: 1.0.0
  contact:
    name: API Support
    email: api@ai-platform.com
    url: https://docs.ai-platform.com
servers:
  - url: https://api.ai-platform.com
    description: Production server
  - url: https://staging-api.ai-platform.com
    description: Staging server
  - url: http://localhost:3001
    description: Local development

security:
  - BearerAuth: []

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: AI
    description: AI-powered features
  - name: Chat
    description: Real-time chat operations
  - name: Documents
    description: Collaborative document editing
  - name: Payments
    description: Cryptocurrency payment operations
  - name: User
    description: User profile and settings

paths:
  /api/v1/auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      operationId: register
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                name:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      operationId: login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/ai/chat:
    post:
      tags:
        - AI
      summary: Create chat completion
      operationId: createChatCompletion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                model:
                  type: string
                  enum: [gpt-4, gpt-3.5-turbo, claude-3]
                  default: gpt-4
                temperature:
                  type: number
                  minimum: 0
                  maximum: 2
                  default: 0.7
                maxTokens:
                  type: integer
                  minimum: 1
                  maximum: 4000
                  default: 1000
      responses:
        '200':
          description: Chat completion created
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                  usage:
                    type: object
                    properties:
                      promptTokens:
                        type: integer
                      completionTokens:
                        type: integer
                      totalTokens:
                        type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'

  /api/v1/ai/translate:
    post:
      tags:
        - AI
      summary: Translate text
      operationId: translateText
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
                - targetLanguage
              properties:
                text:
                  type: string
                targetLanguage:
                  type: string
                  description: ISO 639-1 language code
                sourceLanguage:
                  type: string
                  description: ISO 639-1 language code (auto-detect if not provided)
      responses:
        '200':
          description: Translation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  translatedText:
                    type: string
                  sourceLanguage:
                    type: string
                  confidence:
                    type: number

  /api/v1/chat/rooms:
    get:
      tags:
        - Chat
      summary: List chat rooms
      operationId: listChatRooms
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of chat rooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatRoom'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer

    post:
      tags:
        - Chat
      summary: Create chat room
      operationId: createChatRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
                type:
                  type: string
                  enum: [public, private]
                  default: public
      responses:
        '201':
          description: Chat room created
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    $ref: '#/components/schemas/ChatRoom'

  /api/v1/payments/crypto/prices:
    get:
      tags:
        - Payments
      summary: Get cryptocurrency prices
      operationId: getCryptoPrices
      responses:
        '200':
          description: Current cryptocurrency prices
          content:
            application/json:
              schema:
                type: object
                properties:
                  bitcoin:
                    type: object
                    properties:
                      usd:
                        type: number
                      change24h:
                        type: number
                  ethereum:
                    type: object
                    properties:
                      usd:
                        type: number
                      change24h:
                        type: number
                  usdc:
                    type: object
                    properties:
                      usd:
                        type: number
                      change24h:
                        type: number

  /api/v1/payments/crypto/address:
    post:
      tags:
        - Payments
      summary: Generate payment address
      operationId: generatePaymentAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cryptocurrency
                - amount
              properties:
                cryptocurrency:
                  type: string
                  enum: [bitcoin, ethereum, usdc]
                amount:
                  type: number
                  minimum: 0.0001
      responses:
        '200':
          description: Payment address generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  qrCode:
                    type: string
                    description: Base64 encoded QR code image
                  expiresAt:
                    type: string
                    format: date-time
                  paymentId:
                    type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, moderator, admin]
        createdAt:
          type: string
          format: date-time

    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tokens:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string

    ChatRoom:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [public, private]
        memberCount:
          type: integer
        createdAt:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
