apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: ai-platform
data:
  NODE_ENV: "production"
  PORT: "3001"
  API_VERSION: "v1"
  ENABLE_SWAGGER: "false"
  ENABLE_METRICS: "true"
  ENABLE_REAL_TIME: "true"
  ENABLE_AI: "true"
  ENABLE_CRYPTO: "true"
  CORS_ORIGIN: "https://ai-platform.com"
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "100"

---
apiVersion: v1
kind: Secret
metadata:
  name: api-secret
  namespace: ai-platform
type: Opaque
stringData:
  JWT_SECRET: changeme-production-jwt-secret
  JWT_REFRESH_SECRET: changeme-production-refresh-secret
  OPENAI_API_KEY: your-openai-api-key
  ANTHROPIC_API_KEY: your-anthropic-api-key
  STRIPE_SECRET_KEY: your-stripe-secret-key
  DATABASE_URL: postgresql://aiplatform:changeme-production-password@postgres:5432/aiplatform?schema=public
  REDIS_URL: redis://default:changeme-production-redis-password@redis:6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: ai-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done;']
      - name: run-migrations
        image: ghcr.io/ai-platform/api:latest
        command: ['npm', 'run', 'db:migrate']
        envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secret
      containers:
      - name: api
        image: ghcr.io/ai-platform/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secret
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: uploads-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: ai-platform
spec:
  selector:
    app: api
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads-pvc
  namespace: ai-platform
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: efs-sc

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: ai-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
